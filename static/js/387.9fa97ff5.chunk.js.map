{"version":3,"file":"static/js/387.9fa97ff5.chunk.js","mappings":"qKAsBA,IAnBe,WACb,OACE,0BACE,SAAC,KAAD,CACEA,OAAQ,GACRC,MAAO,GACPC,MAAM,UACNC,aAAc,CAAC,EACfC,aAAa,GACbC,SAAS,EACTC,UAAU,eACVC,eAAe,UACfC,YAAa,EACbC,qBAAsB,KAI7B,C,6KClBYC,EAAaC,EAAAA,GAAAA,GAAH,gDAIVC,EAAaD,EAAAA,GAAAA,GAAH,+C,SCoDvB,EAnDgB,WACd,OAAoCE,EAAAA,EAAAA,UAAS,IAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KAEMC,GAASC,EAAAA,EAAAA,MA2Bf,OAzBAC,EAAAA,EAAAA,YAAU,WACRH,GAAW,GACX,IAAMI,EAAY,mCAAG,6GAEMC,EAAAA,EAAAA,IAAA,6CACiBJ,EAAOK,QADxB,YAErB,CACEL,OAAQ,CAAEM,SAAU,SACpBC,QAAS,CACPC,OAAQ,mBACRC,cACE,gOATS,OAEXC,EAFW,OAajBb,EAAca,EAASC,KAAKC,SAC5Bb,GAAW,GAdM,gDAgBjBc,QAAQC,IAAR,MACAf,GAAW,GAjBM,yDAAH,qDAoBlBI,GACD,GAAE,CAACH,EAAOK,WAGT,2BACGP,GACC,SAACiB,EAAA,EAAD,KAEA,SAACvB,EAAD,UACGI,EAAWoB,KAAI,SAAAC,GAAM,OACpB,UAACvB,EAAD,YACE,wBAAKuB,EAAOC,eAAeC,YAC3B,uBAAIF,EAAOG,YAFIH,EAAOI,GADJ,OAQxBvB,GAAiC,IAAtBF,EAAW0B,SACtB,uBAAG,gDAIV,C","sources":["components/Loader/Loader.jsx","components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx"],"sourcesContent":["import React from 'react';\nimport { Oval } from 'react-loader-spinner';\n\nconst Loader = () => {\n  return (\n    <div>\n      <Oval\n        height={80}\n        width={80}\n        color=\"#4fa94d\"\n        wrapperStyle={{}}\n        wrapperClass=\"\"\n        visible={true}\n        ariaLabel=\"oval-loading\"\n        secondaryColor=\"#4fa94d\"\n        strokeWidth={2}\n        strokeWidthSecondary={2}\n      />\n    </div>\n  );\n};\n\nexport default Loader;\n","import styled from 'styled-components';\n\nexport const ReviewList = styled.ul`\n  margin-bottom: 10px;\n`;\n\nexport const ReviewItem = styled.li`\n  margin-bottom: 8px;\n`;\n","import axios from 'axios';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport Loader from '../../components/Loader/Loader';\nimport { ReviewItem, ReviewList } from './Reviews.styled';\n\nconst Reviews = () => {\n  const [reviewList, setReviewList] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  const params = useParams();\n\n  useEffect(() => {\n    setLoading(true);\n    const FetchReviews = async () => {\n      try {\n        const response = await axios.get(\n          `https://api.themoviedb.org/3/movie/${params.movieId}/reviews`,\n          {\n            params: { language: 'en-US' },\n            headers: {\n              accept: 'application/json',\n              Authorization:\n                'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJlMmQ0ODE5YjFkMzFjMGU5YzVmY2Q0YWUxN2NlYzBiMiIsInN1YiI6IjY0NzA2NjEwNzcwNzAwMDEzNjdlZmY4YSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.BH5Ex4koF22N6gg0mj72NBJQ7EPqMZd2hU1unPYNLqA',\n            },\n          }\n        );\n        setReviewList(response.data.results);\n        setLoading(false);\n      } catch (error) {\n        console.log(error);\n        setLoading(false);\n      }\n    };\n    FetchReviews();\n  }, [params.movieId]);\n\n  return (\n    <div>\n      {loading ? (\n        <Loader />\n      ) : (\n        <ReviewList>\n          {reviewList.map(review => (\n            <ReviewItem key={review.id}>\n              <h2>{review.author_details.username}</h2>\n              <p>{review.content}</p>\n            </ReviewItem>\n          ))}\n        </ReviewList>\n      )}\n      {!loading && reviewList.length === 0 && (\n        <p>We don't have any reviews for this movie.</p>\n      )}\n    </div>\n  );\n};\nexport default Reviews;\n"],"names":["height","width","color","wrapperStyle","wrapperClass","visible","ariaLabel","secondaryColor","strokeWidth","strokeWidthSecondary","ReviewList","styled","ReviewItem","useState","reviewList","setReviewList","loading","setLoading","params","useParams","useEffect","FetchReviews","axios","movieId","language","headers","accept","Authorization","response","data","results","console","log","Loader","map","review","author_details","username","content","id","length"],"sourceRoot":""}
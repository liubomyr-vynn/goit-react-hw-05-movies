{"version":3,"file":"static/js/429.8997d1e6.chunk.js","mappings":"qKAsBA,IAnBe,WACb,OACE,0BACE,SAAC,KAAD,CACEA,OAAQ,GACRC,MAAO,GACPC,MAAM,UACNC,aAAc,CAAC,EACfC,aAAa,GACbC,SAAS,EACTC,UAAU,eACVC,eAAe,UACfC,YAAa,EACbC,qBAAsB,KAI7B,C,wLCjBYC,EAAwBC,EAAAA,GAAAA,IAAH,qKASrBC,GAAWD,EAAAA,EAAAA,IAAOE,EAAAA,GAAPF,CAAH,s2BAsCRG,EAAWH,EAAAA,GAAAA,IAAH,sIAQRI,EAAoBJ,EAAAA,GAAAA,IAAH,+KAUjBK,EAAiBL,EAAAA,GAAAA,IAAH,uIAQdM,EAAiBN,EAAAA,GAAAA,GAAH,wDAKdO,GAAaP,EAAAA,EAAAA,IAAOE,EAAAA,GAAPF,CAAH,s6B,iFCkCvB,EAlGqB,WAAO,IAAD,IACzB,GAA0BQ,EAAAA,EAAAA,UAAS,CAAC,GAApC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOG,EAAP,KAAeC,EAAf,KACA,GAA4BJ,EAAAA,EAAAA,UAAS,IAArC,eAAOK,EAAP,KAAeC,EAAf,KACA,GAA8BN,EAAAA,EAAAA,WAAS,GAAvC,eAAOO,EAAP,KAAgBC,EAAhB,KACMC,GAASC,EAAAA,EAAAA,MACTC,GAAWC,EAAAA,EAAAA,MACXC,GAAsBC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,KAuC3D,OArCAC,EAAAA,EAAAA,YAAU,WACRT,GAAW,GACX,IAAMU,EAAU,mCAAG,6GAEQC,EAAAA,EAAAA,IAAA,6CACiBV,EAAOW,SAC7C,CACEX,OAAQ,CAAEY,SAAU,SACpBC,QAAS,CACPC,OAAQ,mBACRC,cACE,gOATO,OAETC,EAFS,OAcfvB,EAASuB,EAASC,MAClBpB,EAAUmB,EAASC,KAAKrB,QAEpBoB,EAASC,KAAKC,YAChBvB,EAAU,kCAAD,OAC2BqB,EAASC,KAAKC,cAGlDvB,EAAUwB,GAGZpB,GAAW,GAzBI,kDA2BfqB,QAAQC,MAAR,MACAtB,GAAW,GA5BI,0DAAH,qDAgChBU,GACD,GAAE,CAACT,EAAOW,WAGT,UAAC7B,EAAD,YACE,SAACE,EAAD,CACEsC,GAAIlB,EAAoBmB,QACxBC,MAAO,CAAEC,eAAgB,QAF3B,UAIE,SAAC,MAAD,OAGF,UAACvC,EAAD,WACGY,GACC,SAAC4B,EAAA,EAAD,KAEA,gBACEC,IAAKjC,GAAkByB,EACvBS,IAAKpC,EAAMqC,eACXL,MAAO,CAAEM,UAAW,IAAKC,SAAU,QAGvC,UAAC5C,EAAD,YACE,wBAAKK,EAAMqC,kBACX,yBAAG,eAAaG,SAAS,GAAD,OAAyB,GAArBxC,EAAMyC,eAAqB,QACvD,wBAAI,eACJ,uBAAIzC,EAAM0C,YACV,wBAAI,aACJ,wBACqB,IAAlBtC,EAAOuC,OACNvC,EAAOwC,KAAI,SAAAC,GAAK,OAAI,wBAAoBA,EAAMC,MAAjBD,EAAME,GAAnB,KAEhB,uBAAG,sDAKX,UAACnD,EAAD,YACE,wBAAI,6BACJ,UAACC,EAAD,YACE,yBACE,SAACC,EAAD,CAAYgC,GAAG,OAAf,SAAsB,YAExB,yBACE,SAAChC,EAAD,CAAYgC,GAAG,UAAf,SAAyB,qBAK/B,SAAC,EAAAkB,SAAD,CAAUC,UAAU,yBAAK,eAAzB,UACE,SAAC,KAAD,QAIP,C","sources":["components/Loader/Loader.jsx","pages/MovieDetails/MovieDetails.styled.jsx","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import React from 'react';\nimport { Oval } from 'react-loader-spinner';\n\nconst Loader = () => {\n  return (\n    <div>\n      <Oval\n        height={80}\n        width={80}\n        color=\"#4fa94d\"\n        wrapperStyle={{}}\n        wrapperClass=\"\"\n        visible={true}\n        ariaLabel=\"oval-loading\"\n        secondaryColor=\"#4fa94d\"\n        strokeWidth={2}\n        strokeWidthSecondary={2}\n      />\n    </div>\n  );\n};\n\nexport default Loader;\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const MovieDetailsContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  /* align-items: center;\n  justify-content: center; */\n  gap: 20px;\n  margin-bottom: 20px;\n`;\n\nexport const BackLink = styled(NavLink)`\n  text-decoration: none;\n  align-items: center;\n  background-color: #226822;\n  border: 0;\n  border-radius: 100px;\n  box-sizing: border-box;\n  color: #ffffff;\n  cursor: pointer;\n  display: inline-flex;\n\n  font-size: 16px;\n  font-weight: 600;\n  justify-content: center;\n  line-height: 20px;\n  max-width: 100px;\n  min-height: 40px;\n  min-width: 0px;\n  overflow: hidden;\n  padding: 0px;\n  padding-left: 20px;\n  padding-right: 20px;\n  text-align: center;\n  touch-action: manipulation;\n  transition: background-color 0.167s cubic-bezier(0.4, 0, 0.2, 1) 0s,\n    box-shadow 0.167s cubic-bezier(0.4, 0, 0.2, 1) 0s,\n    color 0.167s cubic-bezier(0.4, 0, 0.2, 1) 0s;\n  user-select: none;\n  -webkit-user-select: none;\n  vertical-align: middle;\n\n  &:hover,\n  &:focus {\n    background-color: #497949;\n    color: #ffffff;\n  }\n`;\n\nexport const MainInfo = styled.div`\n  display: flex;\n  @media screen and (max-width: 700px) {\n    flex-direction: column;\n    gap: 20px;\n  }\n`;\n\nexport const MainInfoContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  margin-left: 30px;\n  @media screen and (max-width: 700px) {\n    margin-left: 0px;\n  }\n`;\n\nexport const AdditionalInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const AdditionalList = styled.ul`\n  display: flex;\n  gap: 20px;\n`;\n\nexport const StyledLink = styled(NavLink)`\n  text-decoration: none;\n  align-items: center;\n  background-color: #0a66c2;\n  border: 0;\n  border-radius: 100px;\n  box-sizing: border-box;\n  color: #ffffff;\n  cursor: pointer;\n  display: inline-flex;\n\n  font-size: 16px;\n  font-weight: 600;\n  justify-content: center;\n  line-height: 20px;\n  width: 100px;\n  min-height: 40px;\n  min-width: 0px;\n  overflow: hidden;\n  padding: 0px;\n  padding-left: 20px;\n  padding-right: 20px;\n  text-align: center;\n  touch-action: manipulation;\n  transition: background-color 0.167s cubic-bezier(0.4, 0, 0.2, 1) 0s,\n    box-shadow 0.167s cubic-bezier(0.4, 0, 0.2, 1) 0s,\n    color 0.167s cubic-bezier(0.4, 0, 0.2, 1) 0s;\n  user-select: none;\n  -webkit-user-select: none;\n  vertical-align: middle;\n\n  &:hover,\n  &:focus {\n    background-color: #0f2644;\n    color: #ffffff;\n  }\n\n  &.active {\n    background: #04111f;\n    color: #ffffff;\n  }\n`;\n","import axios from 'axios';\nimport { useState, useEffect, useRef, Suspense } from 'react';\nimport { Outlet, useLocation, useParams } from 'react-router-dom';\nimport {\n  AdditionalInfo,\n  AdditionalList,\n  BackLink,\n  MainInfo,\n  MainInfoContainer,\n  MovieDetailsContainer,\n  StyledLink,\n} from './MovieDetails.styled';\nimport Loader from '../../components/Loader/Loader';\nimport { ImBackward2 } from 'react-icons/im';\n\nimport placeholderImage from '../../images/poster.jpg';\n\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState({});\n  const [poster, setPoster] = useState('');\n  const [genres, setGenres] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const params = useParams();\n  const location = useLocation();\n  const backLinkLocationRef = useRef(location.state?.from ?? '/');\n\n  useEffect(() => {\n    setLoading(true);\n    const fetchMovie = async () => {\n      try {\n        const response = await axios.get(\n          `https://api.themoviedb.org/3/movie/${params.movieId}`,\n          {\n            params: { language: 'en-US' },\n            headers: {\n              accept: 'application/json',\n              Authorization:\n                'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJlMmQ0ODE5YjFkMzFjMGU5YzVmY2Q0YWUxN2NlYzBiMiIsInN1YiI6IjY0NzA2NjEwNzcwNzAwMDEzNjdlZmY4YSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.BH5Ex4koF22N6gg0mj72NBJQ7EPqMZd2hU1unPYNLqA',\n            },\n          }\n        );\n\n        setMovie(response.data);\n        setGenres(response.data.genres);\n\n        if (response.data.poster_path) {\n          setPoster(\n            `https://image.tmdb.org/t/p/w300${response.data.poster_path}`\n          );\n        } else {\n          setPoster(placeholderImage);\n        }\n\n        setLoading(false);\n      } catch (error) {\n        console.error(error);\n        setLoading(false);\n      }\n    };\n\n    fetchMovie();\n  }, [params.movieId]);\n\n  return (\n    <MovieDetailsContainer>\n      <BackLink\n        to={backLinkLocationRef.current}\n        style={{ textDecoration: 'none' }}\n      >\n        <ImBackward2 />\n      </BackLink>\n\n      <MainInfo>\n        {loading ? (\n          <Loader />\n        ) : (\n          <img\n            src={poster ? poster : placeholderImage}\n            alt={movie.original_title}\n            style={{ maxHeight: 450, maxWidth: 300 }}\n          />\n        )}\n        <MainInfoContainer>\n          <h2>{movie.original_title}</h2>\n          <p>User score: {parseInt(`${movie.vote_average * 10}`)}%</p>\n          <h3>Overview:</h3>\n          <p>{movie.overview}</p>\n          <h3>Genres:</h3>\n          <ul>\n            {genres.length !== 0 ? (\n              genres.map(genre => <li key={genre.id}>{genre.name}</li>)\n            ) : (\n              <p>We don't have any genres for this movie.</p>\n            )}\n          </ul>\n        </MainInfoContainer>\n      </MainInfo>\n      <AdditionalInfo>\n        <h3>Additional information:</h3>\n        <AdditionalList>\n          <li>\n            <StyledLink to=\"cast\">Cast</StyledLink>\n          </li>\n          <li>\n            <StyledLink to=\"reviews\">Reviews</StyledLink>\n          </li>\n        </AdditionalList>\n      </AdditionalInfo>\n\n      <Suspense fallback={<div>Loading...</div>}>\n        <Outlet />\n      </Suspense>\n    </MovieDetailsContainer>\n  );\n};\nexport default MovieDetails;\n"],"names":["height","width","color","wrapperStyle","wrapperClass","visible","ariaLabel","secondaryColor","strokeWidth","strokeWidthSecondary","MovieDetailsContainer","styled","BackLink","NavLink","MainInfo","MainInfoContainer","AdditionalInfo","AdditionalList","StyledLink","useState","movie","setMovie","poster","setPoster","genres","setGenres","loading","setLoading","params","useParams","location","useLocation","backLinkLocationRef","useRef","state","from","useEffect","fetchMovie","axios","movieId","language","headers","accept","Authorization","response","data","poster_path","placeholderImage","console","error","to","current","style","textDecoration","Loader","src","alt","original_title","maxHeight","maxWidth","parseInt","vote_average","overview","length","map","genre","name","id","Suspense","fallback"],"sourceRoot":""}
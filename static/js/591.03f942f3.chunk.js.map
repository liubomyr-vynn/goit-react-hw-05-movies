{"version":3,"file":"static/js/591.03f942f3.chunk.js","mappings":"ySAEaA,EAAWC,EAAAA,GAAAA,GAAH,2RAaRC,EAAWD,EAAAA,GAAAA,GAAH,oTAWRE,EAAgBF,EAAAA,GAAAA,IAAH,gFAMbG,EAAYH,EAAAA,GAAAA,EAAH,0C,SC0BtB,EAnDa,WACX,OAAgCI,EAAAA,EAAAA,UAAS,IAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KAEMC,GAASC,EAAAA,EAAAA,MAwBf,OAtBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAU,CACdC,OAAQ,MACRC,IAAI,sCAAD,OAAwCL,EAAOM,QAA/C,YACHN,OAAQ,CAAEO,SAAU,SACpBC,QAAS,CACPC,OAAQ,mBACRC,cACE,+NAINC,EAAAA,EAAAA,QACWR,GACRS,MAAK,SAAUC,GACdd,EAAYc,EAASC,KAAKC,KAC3B,IACAC,OAAM,SAAUC,GACfC,QAAQD,MAAMA,EACf,GACJ,GAAE,CAACjB,EAAOM,WAGT,2BACGR,EAASqB,OAAS,IACjB,SAAC3B,EAAD,UACGM,EAASsB,KAAI,SAAAC,GAAK,OACjB,UAAC3B,EAAD,WAC0B,OAAvB2B,EAAMC,cACL,SAAC3B,EAAD,CACE4B,IAAG,yCAAoCF,EAAMC,cAC7CE,IAAKH,EAAMI,QAGb,SAAC9B,EAAD,CAAe4B,IAAKG,EAAkBF,IAAKH,EAAMI,QAEnD,SAAC7B,EAAD,UAAYyB,EAAMI,SATLJ,EAAMM,GADJ,MAeF,IAApB7B,EAASqB,SAAgB,uBAAG,6CAGlC,C","sources":["components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const CastList = styled.ul`\n  display: grid;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(220px, 1fr));\n  grid-gap: 20px;\n  margin-top: 0;\n  padding: 0;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n  margin-bottom: 20px;\n`;\n\nexport const CastItem = styled.li`\n  border-radius: 3px;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover {\n    transform: scale(1.03);\n    cursor: pointer;\n  }\n`;\n\nexport const CastItemImage = styled.img`\n  width: 100%;\n  height: 260px;\n  object-fit: cover;\n`;\n\nexport const ActorName = styled.p`\n  padding: 10px;\n`;\n","import { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport { useEffect, useState } from 'react';\n\nimport placeholderImage from '../../images/actor.jpg';\nimport { ActorName, CastItem, CastItemImage, CastList } from './Cast.styled';\n\nconst Cast = () => {\n  const [castList, setCastList] = useState([]);\n\n  const params = useParams();\n\n  useEffect(() => {\n    const options = {\n      method: 'GET',\n      url: `https://api.themoviedb.org/3/movie/${params.movieId}/credits`,\n      params: { language: 'en-US' },\n      headers: {\n        accept: 'application/json',\n        Authorization:\n          'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJlMmQ0ODE5YjFkMzFjMGU5YzVmY2Q0YWUxN2NlYzBiMiIsInN1YiI6IjY0NzA2NjEwNzcwNzAwMDEzNjdlZmY4YSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.BH5Ex4koF22N6gg0mj72NBJQ7EPqMZd2hU1unPYNLqA',\n      },\n    };\n\n    axios\n      .request(options)\n      .then(function (response) {\n        setCastList(response.data.cast);\n      })\n      .catch(function (error) {\n        console.error(error);\n      });\n  }, [params.movieId]);\n\n  return (\n    <div>\n      {castList.length > 0 && (\n        <CastList>\n          {castList.map(actor => (\n            <CastItem key={actor.id}>\n              {actor.profile_path !== null ? (\n                <CastItemImage\n                  src={`https://image.tmdb.org/t/p/w300${actor.profile_path}`}\n                  alt={actor.name}\n                />\n              ) : (\n                <CastItemImage src={placeholderImage} alt={actor.name} />\n              )}\n              <ActorName>{actor.name}</ActorName>\n            </CastItem>\n          ))}\n        </CastList>\n      )}\n      {castList.length === 0 && <p>We don't have any cast for this movie.</p>}\n    </div>\n  );\n};\n\nexport default Cast;\n"],"names":["CastList","styled","CastItem","CastItemImage","ActorName","useState","castList","setCastList","params","useParams","useEffect","options","method","url","movieId","language","headers","accept","Authorization","axios","then","response","data","cast","catch","error","console","length","map","actor","profile_path","src","alt","name","placeholderImage","id"],"sourceRoot":""}
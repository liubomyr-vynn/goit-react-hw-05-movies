{"version":3,"file":"static/js/691.89f0f36a.chunk.js","mappings":"iRAEaA,EAAkBC,EAAAA,GAAAA,IAAH,+HAOfC,EAAaD,EAAAA,GAAAA,KAAH,iJAQVE,EAAaF,EAAAA,GAAAA,GAAH,kFAMVG,EAAcH,EAAAA,GAAAA,MAAH,gYAoBXI,EAAeJ,EAAAA,GAAAA,OAAH,gW,SCoDzB,EAlFe,WAAO,IAAD,EACnB,GAAwCK,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAAoCC,EAAAA,EAAAA,UAAS,IAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KACA,GAAoCF,EAAAA,EAAAA,UAAS,IAA7C,eAAOG,EAAP,KAAmBC,EAAnB,KACMC,GAAWC,EAAAA,EAAAA,MACXC,EAAI,UAAGT,EAAaU,IAAI,eAApB,QAA+B,IASzCC,EAAAA,EAAAA,YAAU,WACRP,EAAcK,EACf,GAAE,KAEHE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAU,CACdC,OAAQ,MACRC,IAAK,4CACLC,OAAQ,CACNC,MAAOb,EACPc,cAAe,QACfC,SAAU,QACVC,KAAM,KAERC,QAAS,CACPC,OAAQ,mBACRC,cACE,+NAINC,EAAAA,EAAAA,QACWX,GACRY,MAAK,SAAUC,GACdnB,EAAcmB,EAASC,KAAKC,QAC7B,IACAC,OAAM,SAAUC,GACfC,QAAQD,MAAMA,EACf,GACJ,GAAE,CAAC1B,IAOJ,OACE,UAACV,EAAD,YACE,UAACE,EAAD,CAAYoC,SAPK,SAAAC,GACnBA,EAAEC,iBACF7B,EAAcK,EACf,EAIG,WACE,SAACZ,EAAD,CACEqC,SA/CkB,SAAAF,GACxB,GAAuB,KAAnBA,EAAEG,OAAOC,MACX,OAAOnC,EAAgB,CAAC,GAE1BA,EAAgB,CAAEQ,KAAMuB,EAAEG,OAAOC,OAClC,EA2COA,MAAO3B,EACP4B,KAAK,OACLC,YAAY,gBACZC,aAAa,MACbC,WAAS,EACT/B,KAAK,SACLgC,GAAG,UAEL,SAAC3C,EAAD,CAAcuC,KAAK,SAAnB,UACE,SAAC,MAAD,CAAUK,MAAO,CAAEC,MAAO,GAAIC,OAAQ,WAGzCvC,EAAWwC,OAAS,IACnB,SAACjD,EAAD,UACGS,EAAWyC,KAAI,SAAAC,GAAK,OACnB,yBACE,SAAC,KAAD,CAAMC,GAAE,UAAKD,EAAMN,IAAMQ,MAAO,CAAEC,KAAM3C,GAAxC,SACGwC,EAAMI,SAFFJ,EAAMN,GADI,QAW9B,C","sources":["pages/Movies/Movies.styled.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const MoviesContainer = styled.div`\n  /* display: flex; */\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const MoviesForm = styled.form`\n  display: flex;\n  /* align-items: center;\n  justify-content: center; */\n  margin-top: 10px;\n  margin-bottom: 10px;\n`;\n\nexport const MoviesList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n`;\n\nexport const MoviesInput = styled.input`\n  display: flex;\n  outline: none;\n  cursor: pointer;\n  font-weight: 600;\n  border-radius: 3px;\n  padding: 8px 12px;\n  border: 1px solid #42ecc2;\n  line-height: 1.5;\n  font-size: 16px;\n  &:hover {\n    transition: all 0.1s ease;\n    box-shadow: 0 0 0 0 #fff, 0 0 0 3px #1de9b6;\n  }\n  &::placeholder {\n    font: inherit;\n    font-size: 16px;\n  }\n`;\n\nexport const MoviesButton = styled.button`\n  display: inline-block;\n\n  outline: none;\n  cursor: pointer;\n  font-weight: 600;\n  border-radius: 3px;\n  padding: 8px 20px;\n  border: 1px solid #42ecc2;\n  line-height: 1.15;\n  font-size: 16px;\n  margin-left: 15px;\n\n  &:hover {\n    transition: all 0.1s ease;\n    box-shadow: 0 0 0 0 #fff, 0 0 0 3px #1de9b6;\n  }\n`;\n","import { Link, useLocation, useSearchParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { ImSearch } from 'react-icons/im';\nimport axios from 'axios';\n\nimport {\n  MoviesButton,\n  MoviesContainer,\n  MoviesForm,\n  MoviesInput,\n  MoviesList,\n} from './Movies.styled';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [inputValue, setInputValue] = useState('');\n  const [moviesList, setMoviesList] = useState([]);\n  const location = useLocation();\n  const name = searchParams.get('name') ?? '';\n\n  const updateQueryString = e => {\n    if (e.target.value === '') {\n      return setSearchParams({});\n    }\n    setSearchParams({ name: e.target.value });\n  };\n\n  useEffect(() => {\n    setInputValue(name);\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(() => {\n    const options = {\n      method: 'GET',\n      url: 'https://api.themoviedb.org/3/search/movie',\n      params: {\n        query: inputValue,\n        include_adult: 'false',\n        language: 'en-US',\n        page: '1',\n      },\n      headers: {\n        accept: 'application/json',\n        Authorization:\n          'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJlMmQ0ODE5YjFkMzFjMGU5YzVmY2Q0YWUxN2NlYzBiMiIsInN1YiI6IjY0NzA2NjEwNzcwNzAwMDEzNjdlZmY4YSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.BH5Ex4koF22N6gg0mj72NBJQ7EPqMZd2hU1unPYNLqA',\n      },\n    };\n\n    axios\n      .request(options)\n      .then(function (response) {\n        setMoviesList(response.data.results);\n      })\n      .catch(function (error) {\n        console.error(error);\n      });\n  }, [inputValue]);\n\n  const handleSearch = e => {\n    e.preventDefault();\n    setInputValue(name);\n  };\n\n  return (\n    <MoviesContainer>\n      <MoviesForm onSubmit={handleSearch}>\n        <MoviesInput\n          onChange={updateQueryString}\n          value={name}\n          type=\"text\"\n          placeholder=\"Search movies\"\n          autoComplete=\"off\"\n          autoFocus\n          name=\"search\"\n          id=\"id-1\"\n        />\n        <MoviesButton type=\"submit\">\n          <ImSearch style={{ width: 18, height: 18 }} />\n        </MoviesButton>\n      </MoviesForm>\n      {moviesList.length > 0 && (\n        <MoviesList>\n          {moviesList.map(movie => (\n            <li key={movie.id}>\n              <Link to={`${movie.id}`} state={{ from: location }}>\n                {movie.title}\n              </Link>\n            </li>\n          ))}\n        </MoviesList>\n      )}\n    </MoviesContainer>\n  );\n};\n\nexport default Movies;\n"],"names":["MoviesContainer","styled","MoviesForm","MoviesList","MoviesInput","MoviesButton","useSearchParams","searchParams","setSearchParams","useState","inputValue","setInputValue","moviesList","setMoviesList","location","useLocation","name","get","useEffect","options","method","url","params","query","include_adult","language","page","headers","accept","Authorization","axios","then","response","data","results","catch","error","console","onSubmit","e","preventDefault","onChange","target","value","type","placeholder","autoComplete","autoFocus","id","style","width","height","length","map","movie","to","state","from","title"],"sourceRoot":""}
{"version":3,"file":"static/js/691.31881fe0.chunk.js","mappings":"qKAsBA,IAnBe,WACb,OACE,0BACE,SAAC,KAAD,CACEA,OAAQ,GACRC,MAAO,GACPC,MAAM,UACNC,aAAc,CAAC,EACfC,aAAa,GACbC,SAAS,EACTC,UAAU,eACVC,eAAe,UACfC,YAAa,EACbC,qBAAsB,KAI7B,C,gMCjBYC,EAAkBC,EAAAA,GAAAA,IAAH,+HAOfC,EAAaD,EAAAA,GAAAA,KAAH,iJAQVE,EAAaF,EAAAA,GAAAA,GAAH,kFAMVG,EAAcH,EAAAA,GAAAA,MAAH,2XAoBXI,EAAeJ,EAAAA,GAAAA,OAAH,+VAmBZK,GAAWL,EAAAA,EAAAA,IAAOM,EAAAA,GAAPN,CAAH,kD,kBC6CrB,EA5Fe,WAAO,IAAD,EACnB,GAAwCO,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAAoCC,EAAAA,EAAAA,UAAS,IAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KACA,GAAoCF,EAAAA,EAAAA,UAAS,IAA7C,eAAOG,EAAP,KAAmBC,EAAnB,KACA,GAA8BJ,EAAAA,EAAAA,WAAS,GAAvC,eAAOK,EAAP,KAAgBC,EAAhB,KACMC,GAAWC,EAAAA,EAAAA,MACXC,EAAI,UAAGX,EAAaY,IAAI,eAApB,QAA+B,IASzCC,EAAAA,EAAAA,YAAU,WACRT,EAAcO,EACf,GAAE,KAEHE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAW,mCAAG,6GAEOC,EAAAA,EAAAA,IACrB,4CACA,CACEC,OAAQ,CACNC,MAAOd,EACPe,cAAe,QACfC,SAAU,QACVC,KAAM,KAERC,QAAS,CACPC,OAAQ,mBACRC,cACE,gOAdQ,OAEVC,EAFU,OAmBhBlB,EAAckB,EAASC,KAAKC,SAC5BlB,GAAW,GApBK,gDAsBhBmB,QAAQC,IAAR,MACApB,GAAW,GAvBK,yDAAH,qDA0BjBM,GACD,GAAE,CAACX,IAQJ,OACE,UAACZ,EAAD,YACE,UAACE,EAAD,CAAYoC,SARK,SAAAC,GACnBtB,GAAW,GACXsB,EAAEC,iBACF3B,EAAcO,EACf,EAIG,WACE,SAAChB,EAAD,CACEqC,SAnDkB,SAAAF,GACxB,GAAuB,KAAnBA,EAAEG,OAAOC,MACX,OAAOjC,EAAgB,CAAC,GAE1BA,EAAgB,CAAEU,KAAMmB,EAAEG,OAAOC,OAClC,EA+COA,MAAOvB,EACPwB,KAAK,OACLC,YAAY,gBACZC,aAAa,MACbC,WAAS,EACT3B,KAAK,SACL4B,GAAG,UAEL,SAAC3C,EAAD,CAAcuC,KAAK,SAAnB,UACE,SAAC,MAAD,CAAUK,MAAO,CAAE1D,MAAO,GAAID,OAAQ,WAGzC0B,GACC,SAACkC,EAAA,EAAD,KAEA,SAAC/C,EAAD,UACGW,EAAWqC,KAAI,SAAAC,GAAK,OACnB,yBACE,SAAC9C,EAAD,CAAU+C,GAAE,UAAKD,EAAMJ,IAAMM,MAAO,CAAEC,KAAMrC,GAA5C,SACGkC,EAAMI,SAFFJ,EAAMJ,GADI,OASvBhC,GAAiC,IAAtBF,EAAW2C,QAA+B,KAAf7C,IACtC,uBAAG,+CAIV,C","sources":["components/Loader/Loader.jsx","pages/Movies/Movies.styled.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import React from 'react';\nimport { Oval } from 'react-loader-spinner';\n\nconst Loader = () => {\n  return (\n    <div>\n      <Oval\n        height={80}\n        width={80}\n        color=\"#4fa94d\"\n        wrapperStyle={{}}\n        wrapperClass=\"\"\n        visible={true}\n        ariaLabel=\"oval-loading\"\n        secondaryColor=\"#4fa94d\"\n        strokeWidth={2}\n        strokeWidthSecondary={2}\n      />\n    </div>\n  );\n};\n\nexport default Loader;\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const MoviesContainer = styled.div`\n  /* display: flex; */\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const MoviesForm = styled.form`\n  display: flex;\n  /* align-items: center;\n  justify-content: center; */\n  margin-top: 10px;\n  margin-bottom: 10px;\n`;\n\nexport const MoviesList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n`;\n\nexport const MoviesInput = styled.input`\n  display: flex;\n  outline: none;\n  cursor: pointer;\n  font-weight: 600;\n  border-radius: 3px;\n  padding: 8px;\n  border: 1px solid #42ecc2;\n  line-height: 1.5;\n  font-size: 16px;\n  &:hover {\n    transition: all 0.1s ease;\n    box-shadow: 0 0 0 0 #fff, 0 0 0 3px #1de9b6;\n  }\n  &::placeholder {\n    font: inherit;\n    font-size: 16px;\n  }\n`;\n\nexport const MoviesButton = styled.button`\n  display: inline-block;\n\n  outline: none;\n  cursor: pointer;\n  font-weight: 600;\n  border-radius: 3px;\n  padding: 8px 15px;\n  border: 1px solid #42ecc2;\n  line-height: 1.15;\n  font-size: 16px;\n  margin-left: 5px;\n\n  &:hover {\n    transition: all 0.1s ease;\n    box-shadow: 0 0 0 0 #fff, 0 0 0 3px #1de9b6;\n  }\n`;\n\nexport const ItemLink = styled(Link)`\n  text-decoration: none;\n`;\n","import { useLocation, useSearchParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { ImSearch } from 'react-icons/im';\nimport axios from 'axios';\n\nimport {\n  ItemLink,\n  MoviesButton,\n  MoviesContainer,\n  MoviesForm,\n  MoviesInput,\n  MoviesList,\n} from './Movies.styled';\n\nimport Loader from '../../components/Loader/Loader';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [inputValue, setInputValue] = useState('');\n  const [moviesList, setMoviesList] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const location = useLocation();\n  const name = searchParams.get('name') ?? '';\n\n  const updateQueryString = e => {\n    if (e.target.value === '') {\n      return setSearchParams({});\n    }\n    setSearchParams({ name: e.target.value });\n  };\n\n  useEffect(() => {\n    setInputValue(name);\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(() => {\n    const FetchMovies = async () => {\n      try {\n        const response = await axios.get(\n          'https://api.themoviedb.org/3/search/movie',\n          {\n            params: {\n              query: inputValue,\n              include_adult: 'false',\n              language: 'en-US',\n              page: '1',\n            },\n            headers: {\n              accept: 'application/json',\n              Authorization:\n                'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJlMmQ0ODE5YjFkMzFjMGU5YzVmY2Q0YWUxN2NlYzBiMiIsInN1YiI6IjY0NzA2NjEwNzcwNzAwMDEzNjdlZmY4YSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.BH5Ex4koF22N6gg0mj72NBJQ7EPqMZd2hU1unPYNLqA',\n            },\n          }\n        );\n\n        setMoviesList(response.data.results);\n        setLoading(false);\n      } catch (error) {\n        console.log(error);\n        setLoading(false);\n      }\n    };\n    FetchMovies();\n  }, [inputValue]);\n\n  const handleSearch = e => {\n    setLoading(true);\n    e.preventDefault();\n    setInputValue(name);\n  };\n\n  return (\n    <MoviesContainer>\n      <MoviesForm onSubmit={handleSearch}>\n        <MoviesInput\n          onChange={updateQueryString}\n          value={name}\n          type=\"text\"\n          placeholder=\"Search movies\"\n          autoComplete=\"off\"\n          autoFocus\n          name=\"search\"\n          id=\"id-1\"\n        />\n        <MoviesButton type=\"submit\">\n          <ImSearch style={{ width: 18, height: 18 }} />\n        </MoviesButton>\n      </MoviesForm>\n      {loading ? (\n        <Loader />\n      ) : (\n        <MoviesList>\n          {moviesList.map(movie => (\n            <li key={movie.id}>\n              <ItemLink to={`${movie.id}`} state={{ from: location }}>\n                {movie.title}\n              </ItemLink>\n            </li>\n          ))}\n        </MoviesList>\n      )}\n      {!loading && moviesList.length === 0 && inputValue !== '' && (\n        <p>We don't have any movies for this query.</p>\n      )}\n    </MoviesContainer>\n  );\n};\n\nexport default Movies;\n"],"names":["height","width","color","wrapperStyle","wrapperClass","visible","ariaLabel","secondaryColor","strokeWidth","strokeWidthSecondary","MoviesContainer","styled","MoviesForm","MoviesList","MoviesInput","MoviesButton","ItemLink","Link","useSearchParams","searchParams","setSearchParams","useState","inputValue","setInputValue","moviesList","setMoviesList","loading","setLoading","location","useLocation","name","get","useEffect","FetchMovies","axios","params","query","include_adult","language","page","headers","accept","Authorization","response","data","results","console","log","onSubmit","e","preventDefault","onChange","target","value","type","placeholder","autoComplete","autoFocus","id","style","Loader","map","movie","to","state","from","title","length"],"sourceRoot":""}
{"version":3,"file":"static/js/736.373d26b5.chunk.js","mappings":"2SAEaA,EAAWC,EAAAA,GAAAA,GAAH,2RAaRC,EAAWD,EAAAA,GAAAA,GAAH,oTAWRE,EAAgBF,EAAAA,GAAAA,IAAH,gFAMbG,EAAYH,EAAAA,GAAAA,EAAH,0C,SCoCtB,EA3Da,WACX,OAAgCI,EAAAA,EAAAA,UAAS,IAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KAEMC,GAASC,EAAAA,EAAAA,MA2Bf,OAzBAC,EAAAA,EAAAA,YAAU,WACRH,GAAW,GACX,IAAMI,EAAS,mCAAG,6GAESC,EAAAA,EAAAA,IAAA,6CACiBJ,EAAOK,QADxB,YAErB,CACEL,OAAQ,CAAEM,SAAU,SACpBC,QAAS,CACPC,OAAQ,mBACRC,cACE,gOATM,OAERC,EAFQ,OAadb,EAAYa,EAASC,KAAKC,MAC1Bb,GAAW,GAdG,gDAgBdc,QAAQC,IAAR,MACAf,GAAW,GAjBG,yDAAH,qDAoBfI,GACD,GAAE,CAACH,EAAOK,WAGT,2BACGP,GACC,SAACiB,EAAA,EAAD,KAEA,SAACzB,EAAD,UACGM,EAASoB,KAAI,SAAAC,GAAK,OACjB,UAACzB,EAAD,YACE,SAACC,EAAD,CACEyB,IACED,EAAME,aAAN,yCACsCF,EAAME,cACxCC,EAENC,IAAKJ,EAAMK,QAEb,SAAC5B,EAAD,UAAYuB,EAAMK,SATLL,EAAMM,GADJ,OAerBzB,GAA+B,IAApBF,EAAS4B,SACpB,uBAAG,6CAIV,C,qDC5CD,IAnBe,WACb,OACE,0BACE,SAAC,KAAD,CACEC,OAAQ,GACRC,MAAO,GACPC,MAAM,UACNC,aAAc,CAAC,EACfC,aAAa,GACbC,SAAS,EACTC,UAAU,eACVC,eAAe,UACfC,YAAa,EACbC,qBAAsB,KAI7B,C","sources":["components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx","components/Loader/Loader.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const CastList = styled.ul`\n  display: grid;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(220px, 1fr));\n  grid-gap: 20px;\n  margin-top: 0;\n  padding: 0;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n  margin-bottom: 20px;\n`;\n\nexport const CastItem = styled.li`\n  border-radius: 3px;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover {\n    transform: scale(1.03);\n    cursor: pointer;\n  }\n`;\n\nexport const CastItemImage = styled.img`\n  width: 100%;\n  height: 260px;\n  object-fit: cover;\n`;\n\nexport const ActorName = styled.p`\n  padding: 10px;\n`;\n","import { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport { useEffect, useState } from 'react';\n\nimport Loader from '../../components/Loader/Loader';\n\nimport placeholderImage from '../../images/actor.jpg';\nimport { ActorName, CastItem, CastItemImage, CastList } from './Cast.styled';\n\nconst Cast = () => {\n  const [castList, setCastList] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  const params = useParams();\n\n  useEffect(() => {\n    setLoading(true);\n    const FetchCast = async () => {\n      try {\n        const response = await axios.get(\n          `https://api.themoviedb.org/3/movie/${params.movieId}/credits`,\n          {\n            params: { language: 'en-US' },\n            headers: {\n              accept: 'application/json',\n              Authorization:\n                'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJlMmQ0ODE5YjFkMzFjMGU5YzVmY2Q0YWUxN2NlYzBiMiIsInN1YiI6IjY0NzA2NjEwNzcwNzAwMDEzNjdlZmY4YSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.BH5Ex4koF22N6gg0mj72NBJQ7EPqMZd2hU1unPYNLqA',\n            },\n          }\n        );\n        setCastList(response.data.cast);\n        setLoading(false);\n      } catch (error) {\n        console.log(error);\n        setLoading(false);\n      }\n    };\n    FetchCast();\n  }, [params.movieId]);\n\n  return (\n    <div>\n      {loading ? (\n        <Loader />\n      ) : (\n        <CastList>\n          {castList.map(actor => (\n            <CastItem key={actor.id}>\n              <CastItemImage\n                src={\n                  actor.profile_path\n                    ? `https://image.tmdb.org/t/p/w300${actor.profile_path}`\n                    : placeholderImage\n                }\n                alt={actor.name}\n              />\n              <ActorName>{actor.name}</ActorName>\n            </CastItem>\n          ))}\n        </CastList>\n      )}\n      {!loading && castList.length === 0 && (\n        <p>We don't have any cast for this movie.</p>\n      )}\n    </div>\n  );\n};\n\nexport default Cast;\n","import React from 'react';\nimport { Oval } from 'react-loader-spinner';\n\nconst Loader = () => {\n  return (\n    <div>\n      <Oval\n        height={80}\n        width={80}\n        color=\"#4fa94d\"\n        wrapperStyle={{}}\n        wrapperClass=\"\"\n        visible={true}\n        ariaLabel=\"oval-loading\"\n        secondaryColor=\"#4fa94d\"\n        strokeWidth={2}\n        strokeWidthSecondary={2}\n      />\n    </div>\n  );\n};\n\nexport default Loader;\n"],"names":["CastList","styled","CastItem","CastItemImage","ActorName","useState","castList","setCastList","loading","setLoading","params","useParams","useEffect","FetchCast","axios","movieId","language","headers","accept","Authorization","response","data","cast","console","log","Loader","map","actor","src","profile_path","placeholderImage","alt","name","id","length","height","width","color","wrapperStyle","wrapperClass","visible","ariaLabel","secondaryColor","strokeWidth","strokeWidthSecondary"],"sourceRoot":""}
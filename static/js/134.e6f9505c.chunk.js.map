{"version":3,"file":"static/js/134.e6f9505c.chunk.js","mappings":"sMAwFA,UApFe,WAAO,IAAD,EACnB,GAAwCA,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAAoCC,EAAAA,EAAAA,UAAS,IAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KACA,GAAoCF,EAAAA,EAAAA,UAAS,IAA7C,eAAOG,EAAP,KAAmBC,EAAnB,KACMC,GAAWC,EAAAA,EAAAA,MACXC,EAAI,UAAGT,EAAaU,IAAI,eAApB,QAA+B,IASzCC,EAAAA,EAAAA,YAAU,WACRP,EAAcK,EACf,GAAE,KAEHE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAU,CACdC,OAAQ,MACRC,IAAK,4CACLC,OAAQ,CACNC,MAAOb,EACPc,cAAe,QACfC,SAAU,QACVC,KAAM,KAERC,QAAS,CACPC,OAAQ,mBACRC,cACE,+NAINC,EAAAA,EAAAA,QACWX,GACRY,MAAK,SAAUC,GACdnB,EAAcmB,EAASC,KAAKC,QAC7B,IACAC,OAAM,SAAUC,GACfC,QAAQD,MAAMA,EACf,GACJ,GAAE,CAAC1B,IAOJ,OACE,iBAAK4B,UAAU,YAAf,WACE,kBAAMC,SAPW,SAAAC,GACnBA,EAAEC,iBACF9B,EAAcK,EACf,EAIiCsB,UAAU,aAAxC,WACE,kBAAOA,UAAU,0BAA0BI,QAAQ,UACnD,kBACEC,SAhDkB,SAAAH,GACxB,GAAuB,KAAnBA,EAAEI,OAAOC,MACX,OAAOrC,EAAgB,CAAC,GAE1BA,EAAgB,CAAEQ,KAAMwB,EAAEI,OAAOC,OAClC,EA4COA,MAAO7B,EACP8B,KAAK,OACLC,YAAY,gBACZC,aAAa,MACbC,WAAS,EACTjC,KAAK,SACLsB,UAAU,mBACVY,GAAG,UAEL,mBAAQJ,KAAK,SAASR,UAAU,oBAAhC,SAAoD,cAIrD1B,EAAWuC,OAAS,IACnB,wBACGvC,EAAWwC,KAAI,SAAAC,GAAK,OACnB,yBACE,SAAC,KAAD,CAAMC,GAAE,UAAKD,EAAMH,IAAMK,MAAO,CAAEC,KAAM1C,GAAxC,SACGuC,EAAMI,SAFFJ,EAAMH,GADI,QAW9B,C","sources":["pages/Movies.jsx"],"sourcesContent":["import { Link, useLocation, useSearchParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [inputValue, setInputValue] = useState('');\n  const [moviesList, setMoviesList] = useState([]);\n  const location = useLocation();\n  const name = searchParams.get('name') ?? '';\n\n  const updateQueryString = e => {\n    if (e.target.value === '') {\n      return setSearchParams({});\n    }\n    setSearchParams({ name: e.target.value });\n  };\n\n  useEffect(() => {\n    setInputValue(name);\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(() => {\n    const options = {\n      method: 'GET',\n      url: 'https://api.themoviedb.org/3/search/movie',\n      params: {\n        query: inputValue,\n        include_adult: 'false',\n        language: 'en-US',\n        page: '1',\n      },\n      headers: {\n        accept: 'application/json',\n        Authorization:\n          'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJlMmQ0ODE5YjFkMzFjMGU5YzVmY2Q0YWUxN2NlYzBiMiIsInN1YiI6IjY0NzA2NjEwNzcwNzAwMDEzNjdlZmY4YSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.BH5Ex4koF22N6gg0mj72NBJQ7EPqMZd2hU1unPYNLqA',\n      },\n    };\n\n    axios\n      .request(options)\n      .then(function (response) {\n        setMoviesList(response.data.results);\n      })\n      .catch(function (error) {\n        console.error(error);\n      });\n  }, [inputValue]);\n\n  const handleSearch = e => {\n    e.preventDefault();\n    setInputValue(name);\n  };\n\n  return (\n    <div className=\"Searchbar\">\n      <form onSubmit={handleSearch} className=\"SearchForm\">\n        <label className=\"SearchForm-button-label\" htmlFor=\"id-1\"></label>\n        <input\n          onChange={updateQueryString}\n          value={name}\n          type=\"text\"\n          placeholder=\"Search movies\"\n          autoComplete=\"off\"\n          autoFocus\n          name=\"search\"\n          className=\"SearchForm-input\"\n          id=\"id-1\"\n        />\n        <button type=\"submit\" className=\"SearchForm-button\">\n          Search\n        </button>\n      </form>\n      {moviesList.length > 0 && (\n        <ul>\n          {moviesList.map(movie => (\n            <li key={movie.id}>\n              <Link to={`${movie.id}`} state={{ from: location }}>\n                {movie.title}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n};\n\nexport default Movies;\n"],"names":["useSearchParams","searchParams","setSearchParams","useState","inputValue","setInputValue","moviesList","setMoviesList","location","useLocation","name","get","useEffect","options","method","url","params","query","include_adult","language","page","headers","accept","Authorization","axios","then","response","data","results","catch","error","console","className","onSubmit","e","preventDefault","htmlFor","onChange","target","value","type","placeholder","autoComplete","autoFocus","id","length","map","movie","to","state","from","title"],"sourceRoot":""}